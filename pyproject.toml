### Draftsman ###

[build-system]
requires = ["setuptools >= 70"]
build-backend = "setuptools.build_meta"

[project]
name = "factorio-draftsman"
dynamic = ["version"]
description = "A complete, well-tested, and up-to-date module to manipulate Factorio blueprint strings. Compatible with mods."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
license-files = ["LICENSE"]
keywords = ["factorio", "blueprint", "string"]
authors = [
    { name = "redruin01" }
]
dependencies = [
    "attrs >= 25.4.0",
    "cattrs >= 24.1.3",
    "lupa >= 2.0",
    "GitPython >= 3.1.43",
    "thefuzz >= 0.20.0",
    "enum_tools >= 0.13.0",
    "typing",
    "typing_extensions; python_version < '3.8'",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent"
]

[project.urls]
Homepage = "https://github.com/redruin1/factorio-draftsman"
Documentation = "https://factorio-draftsman.readthedocs.io/en/latest/index.html"
Issues = "https://github.com/redruin1/factorio-draftsman/issues"
Changelog = "https://github.com/redruin1/factorio-draftsman/blob/main/changelog.md"

[project.scripts]
draftsman = "draftsman.environment.script:main"

[dependency-groups]
test = ["pytest >= 7.1.3", "pytest-benchmark >= 5.1.0", "coverage >= 6.4", "tox >= 4.4.7", "jsonschema >= 4.23.0"]
lint = ["black >= 22.3.0", "ruff >= 0.12.0"]
docs = ["sphinx", "sphinx-copybutton", "enum-tools[sphinx]", "sphinx_immaterial"]
dev  = [
    {include-group = "lint"}, 
    {include-group = "test"}, 
    {include-group = "docs"}
]

### Setuptools ###

[tool.setuptools.dynamic]
version = {attr = "draftsman._version.__version__"}

[tool.setuptools.package-data]
draftsman = [
    "draftsman/factorio-data/*", 
    "draftsman/compatibility/*", 
    "draftsman/data/*"
]

### Pytest ###

[tool.pytest.ini_options]
addopts = "--ignore=test/performance --ignore=test/factorio-blueprint-schemas"

### Coverage ###

[tool.coverage.run]
omit = [
    "draftsman/environment/**",
    "examples/**",
    "test/factorio-blueprint-schemas/**",
    "test/performance/**",
    "test/test_waypoint_factorio_versions.py",
    "test/test_all_factorio_versions.py"
]
branch = true
command_line = "-m pytest test -Werror -vv"

[tool.coverage.report]
exclude_also = [
    "def __repr__",
    "@(abc\\.)?abstractmethod",
    "@(typing\\.)overload",
    "\\.\\.\\.",
]
skip_covered = true

[tool.coverage.html]
skip_covered = true